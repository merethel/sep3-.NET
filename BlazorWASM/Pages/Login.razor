@page "/Login"
@using HttpClients.ClientInterfaces
@inject IAuthService AuthService

<link rel="stylesheet" href="css/Login.css">
<div class="container-pages">
<AuthorizeView>
    <NotAuthorized>
        <div class="form">
            <div class="imgcontainer">
                <img src="img/img_avatar2.png" alt="Avatar" class="avatar">
            </div>
            <div class="container">
                <label>
                    <b>Brugernavn</b>
                </label>
                <input type="text" placeholder="Enter Username" @bind="_userName" @bind:event="oninput" @onkeydown="@Enter">

                <label>
                    <b>Kodeord</b>
                </label>
                <input type="password" placeholder="Enter Password" @bind="_password" @bind:event="oninput" @onkeydown="@Enter">
                <div class="button-container">
                    <button class="confirm" @onclick="LoginAsync" disabled="@(string.IsNullOrEmpty(_userName) || string.IsNullOrEmpty(_password))">Log ind</button><br/>
                    <span class="psw">Ny på 3vent4u? <a class="signup-link" href="/CreateUser">Opret konto</a></span>
                </div><br/>

                @if (!string.IsNullOrEmpty(_errorLabel))
                {
                    <div class="field">
                        <label style="color: red">
                            @_errorLabel
                        </label>
                    </div>
                }
            </div>
        </div>
    </NotAuthorized>
    <Authorized>
        <div class="card">
            <h3>Velkommen, @context.User.Identity!.Name</h3>
        </div>
    </Authorized>
</AuthorizeView>
</div>

@code {
    private string _userName = "";
    private string _password = "";
    private string _errorLabel = "";

    private async Task LoginAsync()
    {
        _errorLabel = "";
        try
        {
            await AuthService.LoginAsync(_userName, _password);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            _errorLabel = $"Error: {e.Message}";
        }
    }

    private async Task Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            await LoginAsync();
        }
    }
    
    
}