@page "/Login"
@using HttpClients.ClientInterfaces
@inject IAuthService authService
@inject NavigationManager navMgr


<link rel="stylesheet" href="css/Login.css">

<AuthorizeView>
    <NotAuthorized>
        <div class="form">
            <div class="imgcontainer">
                <img src="img/img_avatar2.png" alt="Avatar" class="avatar">
            </div>
            <div class="container">
                <label>
                    <b>Username</b>
                </label>
                <input type="text" placeholder="Enter Username" @bind="userName" @bind:event="oninput">

                <label>
                    <b>Password</b>
                </label>
                <input type="password" placeholder="Enter Password" @bind="password" @bind:event="oninput">
                <div class="button-container">
                    <button @onclick="LoginAsync" disabled="@(string.IsNullOrEmpty(userName) || string.IsNullOrEmpty(password))">Login</button><br/>
                    <span class="psw">New to 3vent4u? <a class="signup-link" href="/CreateCompany">Sign up</a></span>
                </div><br/>

                @if (!string.IsNullOrEmpty(errorLabel))
                {
                    <div class="field">
                        <label style="color: red">
                            @errorLabel
                        </label>
                    </div>
                }
            </div>
        </div>
    </NotAuthorized>
    <Authorized>
        <div class="card">
            <h3>Hello, @context.User.Identity.Name</h3>
        </div>
    </Authorized>
</AuthorizeView>

@code {
    private string userName;
    private string password;
    private string errorLabel;

    private async Task LoginAsync()
    {
        errorLabel = "";
        try
        {
            await authService.LoginAsync(userName, password);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = $"Error: {e.Message}";
        }
    }
}