@page "/Events"
@using global::Shared.Models
@using HttpClients.ClientInterfaces
@using System.Security.Claims
@using global::Shared.Dtos
@inject IEventService EventService
@inject IAuthService AuthService

<h3 style="text-align: center">Begivenheder</h3>

<div>
    <select class="form-control" @bind="@Category" style="width: 200px; float: left" >
        <option disabled selected value> -- Vælg en kategori -- </option>
        @foreach (var c in _categories)
        {
            <option value="@c"> @c </option>
        }
    </select>
    
    <select class="form-control" @bind="@Area" style="width: 200px; float: left">
        <option disabled selected value> -- Vælg et område -- </option>
        @foreach (var a in _areas)
        {
            <option value="@a"> @a </option>
        }
    </select>    
    <div class="button-container">
        <button class="confirm-button" @onclick="Filter">Filtrer</button>
    </div>
</div>


@if (_events == null)
{
    <p>Indlæser...</p>
}
else if (!_events.Any())
{
    <p>Ingen begivenheder at finde</p>
}

else
{
    <div>

    @foreach (Event item in _events)
    {
        <div class="card">
            <div class="boxes">
                <b>Titel:</b>
                    <label>@item.Title</label>
            </div>
             
        <div class="boxes">
            <b>Ejer:</b>
            <label>@item.Owner.Username</label>
        </div>
        
            <div class="boxes">
                <b>Lokation:</b>
                <label>@item.Location</label>
            </div>

            <div class="boxes">
                <b>Dato og tid:</b>
                <label>@item.DateTime</label>
            </div>
                
            <div class="boxes">
                <b>Beskrivelse:</b>
                <div id="Description">
                    @item.Description
                </div>
                
                <div class="boxes">
                    <b>Område:</b>
                    <label>@item.Area</label>
                </div>
                <div class="boxes">
                    <b>Kategori</b>
                    <label>@item.Category</label>
                </div>
                
                
                <AuthorizeView>
                    <div class="button-container">
                        <button class="confirm"
                                @onclick="@(() => RegisterAttendee(item.Id))"  disabled="@Disabled(item.Id)">
                            @GetButtonText(item.Id)
                        </button>
                    </div>
                </AuthorizeView>
            </div>
            </div>
        <br/>
                                
    }
    </div>

}


@code {
    private ICollection<Event>? _events;
    private string _msg = "";
    private int _userId;
    private string _category = null;
    private string _area = null;

    string Category
    {
        get => _category;
        set {_category = value;}
    }

    string Area
    {
        get => _area;
        set {_area = value;}
    }
    
    List<string> _categories = new List<string>()
    {
        "Motion",
        "Klima",
        "Spil"
    };
    
    List<string> _areas = new List<string>()
    {
        "Sjælland",
        "Jylland",
        "Fyn",
        "Bornholm",
        "Færøerne",
        "Grønland"
    };


    protected override async Task OnInitializedAsync()
    {
        try
        {
            ClaimsPrincipal claimsPrincipal = await AuthService.GetAuthAsync();

            foreach (var claim in claimsPrincipal.Claims)
            {
                if (claim.Type.Equals("UserId"))
                {
                    _userId = Int32.Parse(claim.Value);
                }
            }

            _events = await EventService.GetEvents(new CriteriaDto());
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            _msg = e.Message;
        }

    }

    //knappen disables når du trykker men med et delay, og i dette delay kan du trykke på knappen flere gange hvis du er hurtig.
    private async Task RegisterAttendee(int eventId)
    {
        var userId = this._userId;
        await EventService.RegisterAttendeeAsync(userId, eventId);
        _msg = "Tilmeldt!";
        _events = await EventService.GetEvents(new CriteriaDto());
    }

    // Jeg har fixet at knapperne bliver disabled/enabled alt efter om du er tilmeldt eller ikke.

    //2 ting som ikke virker men nu er kl 23:51 og jeg er træt...
    //Der står med grøn skrift "Tilmeldt!" på alle eventsne når man trykker på en tilmend knap.
    //Den opdatere ikke i realtime, så når du har trykket tilmeld disabler den først knappen når du har reloadet siden, det skal også kigges på.

    private bool Disabled(int eventId)
    {
        Event eventToReturn = null!;

        foreach (Event e in _events!)
        {
            if (e.Id == eventId)
            {
                eventToReturn = e;
            }
        }

        foreach (User u in eventToReturn.Attendees)
        {
            if (_userId == u.Id)
                return true;
        }
        return false;
    }

    private string GetButtonText(int eventId)
    {
        if (Disabled(eventId))
        {
            return "Tilmeldt";
        }
        else
        {
            return "Tilmeld Begivenhed";
        }
    }

    private async Task Filter()
    {

        if (_category != null || _area != null)
        {
            _events = await EventService.GetEvents(new CriteriaDto(0,_category,_area));
        }
        
        else
        {
            throw new Exception("Intet filter valgt");
        }
    }
}