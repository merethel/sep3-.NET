@page "/CancelledEvents"
@using System.Security.Claims
@using global::Shared.Dtos
@using global::Shared.Models
@using HttpClients.ClientInterfaces
@inject IAuthService AuthService
@inject IEventService EventService



<div class="container-pages">
    <AuthorizeView>
    <h3 class="page-header" style="text-align: center">Aflyste Begivenheder</h3>

    @if (_cancelledEvents == null)
    {
        <p>Indlæser...</p>
    }
    else if (!_cancelledEvents.Any())
    {
        <p>Ingen aflyste begivenheder at finde</p>
    }
    else
    {
         <div style="text-align: center; align-content: center; display: flex; flex-direction: column-reverse;">
         
                     @foreach (Event item in _cancelledEvents)
                     {
                         <div >
                             <div class="card-events">
         
                                 @if (item.Category.Equals("Motion"))
                                 {
                                     <div class="boxes" style="background-image: url('img/excercise.jpg'); height: 100px">
                                         
                                     </div>
                                 }
                                 
                                 @if (item.Category.Equals("Klima"))
                                 {
                                     <div class="boxes" style="background-image: url('img/climate.jpg'); height: 100px">
                                         
                                     </div>
                                 }
         
                                 @if (item.Category.Equals("Spil"))
                                 {
                                     <div class="boxes" style="background-image: url('img/boardgames.jpg'); height: 100px">
                                         
                                     </div>
                                 }
         
                                 <div class="boxes" style="padding-bottom: 0px">
                                     <label class="card-title">@item.Title</label>
                                 </div>
                                 <div class="boxes" style="padding-top: 0px">
                                     Afholdes af
                                     <label class="card-creater">
                                         <b>@item.Owner.Username</b>
                                     </label>
                                 </div>
                                 <br/>
                                 <br/>
         
                                 <div class="boxes">
                                     <b>Beskrivelse:</b>
                                     <div class="card-description" id="Description">
                                         @item.Description
                                     </div>

                                     <div style="display: flex; align-items: flex-start ">
                                         <div class="boxes">
                                             <b>Kategori:</b>
                                             <br/>
                                             <label class="card-category">@item.Category</label>
                                         </div>
         
                                         <div class="boxes">
                                             <b>Område og lokation:</b>
                                             <label class="card-area">@item.Area, @item.Location</label>
                                         </div>
         
                                         <div class="boxes">
                                             <b>Dato og tid:</b>
                                             <label class="card-datetime">@item.DateTime</label>
                                         </div>
                                     </div>
         
         
                                 </div>
                             </div>
                         </div>
                         <br/>
                     }
                 </div>
        
    }
</AuthorizeView>

    </div>
@code
{
    private int _userId;
    private ICollection<Event>? _cancelledEvents;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            ClaimsPrincipal claimsPrincipal = await AuthService.GetAuthAsync();

            foreach (var claim in claimsPrincipal.Claims)
            {
                if (claim.Type.Equals("UserId"))
                {
                    _userId = Int32.Parse(claim.Value);
                }
            }

            
            while (_userId != 0)
            {
                ICollection<Event> sortedEvents = new List<Event>();
                ICollection<Event> events = await EventService.GetEvents(new CriteriaDto()
                {
                    IsCancelled = true,
                    Attendee = _userId
                    
                });

                //Denne sortering burde laves med Hibernate men det kan vi ikke få til at virke så vi laver den her.
                //Dette er dog ikke skalerbart hvis vi har mange aflyste begivenheder.
                
                foreach (Event eventInList in events)
                {
                    foreach (User user in eventInList.Attendees)
                    {
                        if (user.Id == _userId)
                        {
                            sortedEvents.Add(eventInList);
                        }
                    }
                }

                _cancelledEvents = sortedEvents;
                
                StateHasChanged();
                Console.WriteLine(_cancelledEvents.Count);
                await Task.Delay(30000);
            }
            
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }
}