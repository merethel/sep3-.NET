@page "/CreateEvent"
@using HttpClients.ClientInterfaces
@using Microsoft.AspNetCore.Components
@using global::Shared.Dtos
@using HttpClients.Implementations
@inject IEventService EventService

<h3>Create Your Event</h3>
<div>
    <label>Title:</label><br/>
    <input type="text" @bind="Title" @bind:event="oninput"/>
</div>   
<div>
    <label>Description:</label><br/>
    <input type="text" @bind="Description" @bind:event="oninput"/>
</div>    
<div>
    <label>Date</label><br/>
    <a style="font-size: small">Day</a> <input class="smallinput" type="text" @bind="day" @bind:event="oninput"/>
    <a style="font-size: small">Moth</a> <input class="smallinput" type="text" @bind="month" @bind:event="oninput"/>
    <a style="font-size: small">Year</a> <input class="smallinput" type="text" @bind="year" @bind:event="oninput"/>
</div>
<div>
    <label>Time</label><br/>
    <input class="smallinput" type="text" @bind="hour" @bind:event="oninput"/>:
    <input class="smallinput" type="text" @bind="min" @bind:event="oninput"/>
</div>
<div>
    @if (!string.IsNullOrEmpty(ResultMsg))
    {
        <label style="color: @Color">@ResultMsg</label>
    }
</div>
<div>
    <button @onclick="Create">Create</button>
</div>

@code {
    private string Title = "";
    private string Description = "";

    private string year = "";
    private string month = "";
    private string day = "";

    private string hour = "";
    private string min = "";
    
    private DateTime DateTime;
    private string ResultMsg = "";
    private string Color = "";
    private string? username = "";

    
    
    private async Task Create()
    {
        ResultMsg = "";

        try
        {
            DateTime = new DateTime(
                Int32.Parse(year),
                Int32.Parse(month),
                Int32.Parse(day),
                Int32.Parse(hour),
                Int32.Parse(min),
                0);
        }
        catch (Exception e)
        {
            Color = "red";
            ResultMsg = "Invalid date or time";
        }
        
        try
        {
            username = JwtAuthService.Username;
            await EventService.CreateAsync(new EventCreationDto(username, Title, Description, DateTime));
            Title = "";
            Description = "";
            year = "";
            month = "";
            day = "";
            hour = "";
            min = "";

            DateTime = DateTime.MaxValue;
            
            ResultMsg = "Event created!";
            Color = "green";

        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            ResultMsg = e.Message;
            Color = "red";
        }
    }

}